def steady_clock_us() -> int: ...
def system_clock_us() -> int: ...

class ZMQServer:
    def __init__(self, server_name: str, server_endpoint: str) -> None: ...
    def add_topic(self, topic: str, max_remaining_time: float) -> None: ...
    def put_data(self, topic: str, data: bytes) -> None: ...
    def get_latest_data(self, topic: str) -> tuple[bytes, float]: ...
    def get_last_k_data(
        self, topic: str, k: int
    ) -> tuple[list[bytes], list[float]]: ...
    def get_all_data(self, topic: str) -> tuple[list[bytes], list[float]]: ...
    def get_all_topic_names(self) -> list[str]: ...
    def get_timestamp(self) -> float: ...
    def reset_start_time(self, system_time_us: int) -> None: ...

class ZMQClient:
    def __init__(self, client_name: str, server_endpoint: str) -> None: ...
    def request_latest(self, topic: str) -> tuple[bytes, float]: ...
    def request_all(self, topic: str) -> tuple[list[bytes], list[float]]: ...
    def request_last_k(self, topic: str, k: int) -> tuple[list[bytes], list[float]]: ...
    # def request_with_data(
    #     self, topic: str, data: tuple[bytes, float]
    # ) -> tuple[bytes, float]: ...
    def get_last_retrieved_data(self) -> tuple[list[bytes], list[float]]: ...
    def get_timestamp(self) -> float: ...
    def reset_start_time(self, system_time_us: int) -> None: ...
